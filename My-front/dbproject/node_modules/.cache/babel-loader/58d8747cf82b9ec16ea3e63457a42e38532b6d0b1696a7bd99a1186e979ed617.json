{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport CriminalInfo from \"./CriminalInfo.vue\";\nimport axios from \"axios\";\nimport LeaderLine from \"leader-line\";\nexport default {\n  components: {\n    CriminalInfo\n  },\n  data() {\n    return {\n      inputID: \"\",\n      content: [],\n      maleUrl: require(\"@/assets/male.png\"),\n      femaleUrl: require(\"@/assets/female.png\"),\n      placeholder: \"请输入居民身份证号\",\n      isGraphContainerVisible: false,\n      readyToRenderGraph: false,\n      isError: false,\n      // 控制错误动画\n      // 以下为渲染信息相关\n      curInfo: 0,\n      // 当前加载位置\n      infoList: [],\n      // 用于存储渲染的信息\n      lineList: [],\n      // 用于渲染线条\n      hasFlushed: false\n    };\n  },\n  watch: {\n    content: {\n      handler() {\n        this.infoList = [];\n        this.lineList = [];\n        this.curInfo = 0;\n        setTimeout(() => {\n          this.readyToRenderGraph = true;\n        }, 500);\n        // 设置infoList\n        setInterval(() => {\n          if (this.curInfo < this.content.people.length) {\n            this.infoList.push(this.content.people[this.curInfo]);\n            this.curInfo++;\n          } else if (this.lineList.length === 0 && !this.hasFlushed) {\n            // 此时人物已全部添加\n            for (var index = 1; index < this.infoList.length && index <= 2; index++) {\n              const myline = new LeaderLine(document.getElementById(\"\" + 0), document.getElementById(\"\" + index), {\n                startSocket: \"top\",\n                endSocket: \"bottom\",\n                path: \"magnet\",\n                size: 3,\n                dash: {\n                  animation: false\n                },\n                gradient: {\n                  startColor: \"#2e17c3\",\n                  endColor: \"#1df3f9\",\n                  animation: \"true\"\n                },\n                endPlugColor: \"#1df3f9\"\n              });\n              this.lineList.push(myline);\n            }\n            for (var childIndex = 3; childIndex < this.infoList.length; childIndex++) {\n              const myline = new LeaderLine(document.getElementById(\"\" + 0), document.getElementById(\"\" + childIndex), {\n                startSocket: \"bottom\",\n                endSocket: \"top\",\n                path: \"magnet\",\n                size: 3,\n                dash: {\n                  animation: false\n                },\n                gradient: {\n                  startColor: \"#2e17c3\",\n                  endColor: \"#1df3f9\"\n                },\n                endPlugColor: \"#1df3f9\"\n              });\n              this.lineList.push(myline);\n            }\n          }\n        }, 400);\n      }\n    }\n  },\n  methods: {\n    handleMouseMove(event) {\n      const x = event.pageX - event.target.offsetLeft;\n      const y = event.pageY - event.target.offsetTop;\n      event.target.style.setProperty(\"--x\", `${x}px`);\n      event.target.style.setProperty(\"--y\", `${y}px`);\n    },\n    restart(index) {\n      if (index == 0 || this.infoList[index].name == \"\") return;\n      // 换中心人物的处理函数\n      /* 准备工作区 */\n      this.flushLine(); // 清空指示线\n      this.inputID = this.infoList[index].id;\n\n      /*************/\n      /* 重置工作区 */\n      this.query();\n      /*************/\n    },\n\n    getPos(index) {\n      let width = this.$el.offsetWidth;\n      let height = this.$el.offsetHeight;\n      let top = \"0%\";\n      let left = \"0%\";\n      if (index == 0) {\n        // 中心人物\n        top = `${height / 4 * 2 - 100}px`;\n        left = `${width / 2 - 250}px`;\n      } else if (index == 1 || index == 2) {\n        // 父母\n        top = `${height / 4 - 100 - 50}px`;\n        left = `${width / 100 * index * 30 - 200}px`;\n      } else {\n        // 孩子关系\n        let leftChild = this.content.people.length - 3;\n        top = `${height / 4 * 3 - 80}px`;\n        left = `${width / (leftChild + 1) * (index - 2) - 200}px`;\n      }\n      return {\n        top,\n        left\n      };\n    },\n    startErrorAnime() {\n      this.isError = true;\n      // 重置显示已有的输入内容为空\n      this.inputID = \"\";\n      this.placeholder = \"不存在此犯人，请重新输入\";\n      setTimeout(() => {\n        this.isError = false;\n        this.inputID = \"\";\n        this.placeholder = \"\";\n      }, 500);\n    },\n    query() {\n      axios.post(`http://localhost:7078/api/FamilybgCheck`, {\n        InputText: this.inputID\n      }).then(response => {\n        if (response.data.people.length !== 0) {\n          // 有数据\n          this.flushLine(); //2023.9.3 测试一下效果\n\n          this.hasFlushed = false;\n          this.content = response.data;\n          this.isGraphContainerVisible = true;\n          this.isError = false;\n          this.showElement = !this.showElement; // 切换元素的显示/隐藏状态 //2023.9.3 让小标题消失\n        } else {\n          this.startErrorAnime();\n          this.flushLine();\n          location.reload(); //2023.9.3 刷新界面\n          //this.showTitle = true; //2023.9.3 显示小标题\n          this.readyToRenderGraph = false;\n        }\n      }).catch(error => {\n        console.error(error);\n        alert(\"网络错误，请重试\");\n      });\n    },\n    changeInputStatus() {\n      if (this.placeholder === \"\") {\n        this.placeholder = \"请输入居民身份证号\";\n      } else {\n        this.placeholder = \"\";\n      }\n    },\n    flushLine() {\n      this.lineList.forEach(line => line.remove());\n      this.lineList = [];\n      this.hasFlushed = true;\n    },\n    setLineObvious(id) {\n      if (id > this.lineList.length || id == 0) return;\n      this.lineList[id - 1].setOptions({\n        size: 6,\n        dash: {\n          animation: true\n        }\n      });\n    },\n    setLineDefault(id) {\n      if (id > this.lineList.length || id == 0) return;\n      this.lineList[id - 1].setOptions({\n        size: 3,\n        dash: {\n          animation: false\n        }\n      });\n    }\n  },\n  beforeRouteLeave() {\n    console.log(\"end\");\n    this.flushLine();\n  }\n};","map":{"version":3,"names":["CriminalInfo","axios","LeaderLine","components","data","inputID","content","maleUrl","require","femaleUrl","placeholder","isGraphContainerVisible","readyToRenderGraph","isError","curInfo","infoList","lineList","hasFlushed","watch","handler","setTimeout","setInterval","people","length","push","index","myline","document","getElementById","startSocket","endSocket","path","size","dash","animation","gradient","startColor","endColor","endPlugColor","childIndex","methods","handleMouseMove","event","x","pageX","target","offsetLeft","y","pageY","offsetTop","style","setProperty","restart","name","flushLine","id","query","getPos","width","$el","offsetWidth","height","offsetHeight","top","left","leftChild","startErrorAnime","post","InputText","then","response","showElement","location","reload","catch","error","console","alert","changeInputStatus","forEach","line","remove","setLineObvious","setOptions","setLineDefault","beforeRouteLeave","log"],"sources":["C:\\GitHubWarehouse\\2023-TJU-DBD-Police-Affair-System\\My-front\\dbproject\\src\\components\\UrbanResidentmanagement\\FamilybgCheck.vue"],"sourcesContent":["<template>\r\n  <el-header class=\"sub-header\"  @mousemove=\"handleMouseMove\">\r\n      <div>&nbsp;&nbsp;城区和居民管理&nbsp;>&nbsp;家族背景调查</div>\r\n    </el-header>\r\n  <div class=\"container\">\r\n    \r\n\r\n    <!-- main window -->\r\n    <!-- element:query inputbox and confirm button-->\r\n    <div class=\"queryBox\" :class=\"{ upBox: isGraphContainerVisible }\">\r\n      <input\r\n        type=\"text\"\r\n        v-model=\"inputID\"\r\n        :placeholder=\"placeholder\"\r\n        @focus=\"changeInputStatus\"\r\n        @blur=\"changeInputStatus\"\r\n        @keydown.enter=\"query\"\r\n        class=\"inputBox\"\r\n        :class=\"{ errorAnime: isError }\"\r\n      />\r\n      <button @click=\"query\" class=\"button\">查询</button>\r\n    </div>\r\n    <!-- element:family graph container -->\r\n    <!-- graph is where criminal info is shown -->\r\n    <div v-if=\"readyToRenderGraph\" class=\"graphContainer\">\r\n      <!-- this part is for info render,\r\n     step1: calc position and sequential for each info\r\n     step2: render by sequential -->\r\n      <transitionGroup name=\"fade\" tag=\"ul\">\r\n        <div\r\n          class=\"imgCtrl\"\r\n          v-for=\"(item, index) in this.infoList\"\r\n          :style=\"getPos(index)\"\r\n          :key=\"index\"\r\n          :id=\"index\"\r\n          @mouseenter=\"setLineObvious(index)\"\r\n          @mouseleave=\"setLineDefault(index)\"\r\n          @click=\"restart(index)\"\r\n        >\r\n          <CriminalInfo\r\n            :imgUrl=\"item.gender === 'F' ? femaleUrl : maleUrl\"\r\n            :content=\"item\"\r\n          />\r\n        </div>\r\n      </transitionGroup>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CriminalInfo from \"./CriminalInfo.vue\";\r\nimport axios from \"axios\";\r\nimport LeaderLine from \"leader-line\";\r\nexport default {\r\n  components: {\r\n    CriminalInfo,\r\n  },\r\n  data() {\r\n    return {\r\n      inputID: \"\",\r\n      content: [],\r\n      maleUrl: require(\"@/assets/male.png\"),\r\n      femaleUrl: require(\"@/assets/female.png\"),\r\n      placeholder: \"请输入居民身份证号\",\r\n      isGraphContainerVisible: false,\r\n      readyToRenderGraph: false,\r\n      isError: false, // 控制错误动画\r\n      // 以下为渲染信息相关\r\n      curInfo: 0, // 当前加载位置\r\n      infoList: [], // 用于存储渲染的信息\r\n      lineList: [], // 用于渲染线条\r\n      hasFlushed: false,\r\n    };\r\n  },\r\n  watch: {\r\n    content: {\r\n      handler() {\r\n        this.infoList = [];\r\n        this.lineList = [];\r\n        this.curInfo = 0;\r\n        setTimeout(() => {\r\n          this.readyToRenderGraph = true;\r\n        }, 500);\r\n        // 设置infoList\r\n        setInterval(() => {\r\n          if (this.curInfo < this.content.people.length) {\r\n            this.infoList.push(this.content.people[this.curInfo]);\r\n            this.curInfo++;\r\n          } else if (this.lineList.length === 0 && !this.hasFlushed) {\r\n            // 此时人物已全部添加\r\n            for (\r\n              var index = 1;\r\n              index < this.infoList.length && index <= 2;\r\n              index++\r\n            ) {\r\n              const myline = new LeaderLine(\r\n                document.getElementById(\"\" + 0),\r\n                document.getElementById(\"\" + index),\r\n                {\r\n                  startSocket: \"top\",\r\n                  endSocket: \"bottom\",\r\n                  path: \"magnet\",\r\n                  size: 3,\r\n                  dash: { animation: false },\r\n                  gradient: {\r\n                    startColor: \"#2e17c3\",\r\n                    endColor: \"#1df3f9\",\r\n                    animation: \"true\",\r\n                  },\r\n                  endPlugColor: \"#1df3f9\",\r\n                }\r\n              );\r\n              this.lineList.push(myline);\r\n            }\r\n            for (\r\n              var childIndex = 3;\r\n              childIndex < this.infoList.length;\r\n              childIndex++\r\n            ) {\r\n              const myline = new LeaderLine(\r\n                document.getElementById(\"\" + 0),\r\n                document.getElementById(\"\" + childIndex),\r\n                {\r\n                  startSocket: \"bottom\",\r\n                  endSocket: \"top\",\r\n                  path: \"magnet\",\r\n                  size: 3,\r\n                  dash: { animation: false },\r\n                  gradient: {\r\n                    startColor: \"#2e17c3\",\r\n                    endColor: \"#1df3f9\",\r\n                  },\r\n                  endPlugColor: \"#1df3f9\",\r\n                }\r\n              );\r\n              this.lineList.push(myline);\r\n            }\r\n          }\r\n        }, 400);\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    handleMouseMove(event) {\r\n      const x = event.pageX - event.target.offsetLeft;\r\n      const y = event.pageY - event.target.offsetTop;\r\n\r\n      event.target.style.setProperty(\"--x\", `${x}px`);\r\n      event.target.style.setProperty(\"--y\", `${y}px`);\r\n    },\r\n    restart(index) {\r\n      if (index == 0 || this.infoList[index].name == \"\") return;\r\n      // 换中心人物的处理函数\r\n      /* 准备工作区 */\r\n      this.flushLine(); // 清空指示线\r\n      this.inputID = this.infoList[index].id;\r\n\r\n      /*************/\r\n      /* 重置工作区 */\r\n      this.query();\r\n      /*************/\r\n    },\r\n    getPos(index) {\r\n      let width = this.$el.offsetWidth;\r\n      let height = this.$el.offsetHeight;\r\n      let top = \"0%\";\r\n      let left = \"0%\";\r\n      if (index == 0) {\r\n        // 中心人物\r\n        top = `${(height / 4) * 2 - 100}px`;\r\n        left = `${width / 2 - 250}px`;\r\n      } else if (index == 1 || index == 2) {\r\n        // 父母\r\n        top = `${height / 4 - 100 - 50}px`;\r\n        left = `${(width / 100) * index * 30 - 200}px`;\r\n      } else {\r\n        // 孩子关系\r\n        let leftChild = this.content.people.length - 3;\r\n        top = `${(height / 4) * 3 - 80}px`;\r\n        left = `${(width / (leftChild + 1)) * (index - 2) - 200}px`;\r\n      }\r\n      return {\r\n        top,\r\n        left,\r\n      };\r\n    },\r\n    startErrorAnime() {\r\n      this.isError = true;\r\n      // 重置显示已有的输入内容为空\r\n      this.inputID = \"\";\r\n      this.placeholder = \"不存在此犯人，请重新输入\";\r\n      setTimeout(() => {\r\n        this.isError = false;\r\n        this.inputID = \"\";\r\n        this.placeholder = \"\";\r\n      }, 500);\r\n    },\r\n    query() {\r\n      axios\r\n        .post(`http://localhost:7078/api/FamilybgCheck`, {\r\n          InputText: this.inputID,\r\n        })\r\n        .then((response) => {\r\n          if (response.data.people.length !== 0) {\r\n            // 有数据\r\n            this.flushLine();  //2023.9.3 测试一下效果\r\n      \r\n            this.hasFlushed = false;\r\n            this.content = response.data;\r\n            this.isGraphContainerVisible = true;\r\n            this.isError = false;\r\n\r\n            this.showElement = !this.showElement; // 切换元素的显示/隐藏状态 //2023.9.3 让小标题消失\r\n          } else {\r\n            this.startErrorAnime();\r\n            this.flushLine();\r\n            location.reload(); //2023.9.3 刷新界面\r\n            //this.showTitle = true; //2023.9.3 显示小标题\r\n            this.readyToRenderGraph = false;\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n          alert(\"网络错误，请重试\");\r\n        });\r\n    },\r\n    changeInputStatus() {\r\n      if (this.placeholder === \"\") {\r\n        this.placeholder = \"请输入居民身份证号\";\r\n      } else {\r\n        this.placeholder = \"\";\r\n      }\r\n    },\r\n    flushLine() {\r\n      this.lineList.forEach((line) => line.remove());\r\n      this.lineList = [];\r\n      this.hasFlushed = true;\r\n    },\r\n    setLineObvious(id) {\r\n      if (id > this.lineList.length || id == 0) return;\r\n      this.lineList[id - 1].setOptions({ size: 6, dash: { animation: true } });\r\n    },\r\n    setLineDefault(id) {\r\n      if (id > this.lineList.length || id == 0) return;\r\n      this.lineList[id - 1].setOptions({ size: 3, dash: { animation: false } });\r\n    },\r\n  },\r\n  beforeRouteLeave() {\r\n    console.log(\"end\");\r\n    this.flushLine();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.sub-header {\r\n  display: flex;\r\n  z-index: 9999; /* 设置一个较高的 z-index 值， 使元素显示在最上层*/\r\n  overflow: hidden;\r\n  position: absolute;\r\n  top: 70px;\r\n  left: 199px;\r\n  width: calc(100% - 199px);\r\n  height: 7vh;\r\n  min-height: 40px;\r\n  align-items: center;\r\n  /* 文字竖直方向居中对齐 */\r\n  background-color: #1f2cdf;\r\n  box-shadow: inset -500px 0px 200px 0px rgba(4, 0, 113, 0.856);\r\n  color: #ffffff;\r\n  font-size: 28px;\r\n}\r\n.queryBox {\r\n  width: 100%;\r\n  height: 100px;\r\n  position: relative;\r\n  top: 40vh;\r\n  overflow: hidden;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: transform 0.5s ease;\r\n}\r\n\r\n.upBox {\r\n  transform: translateY(-40vh);\r\n}\r\n.container {\r\n  background: #ffffff;\r\n  width: 100%;\r\n  height: 100vh;\r\n  position: relative;\r\n  overflow: hidden;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n}\r\n.inputBox {\r\n  width: 250px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-radius: 16px;\r\n  font-size: 16px;\r\n  background: #ffffff;\r\n  padding: 3px;\r\n}\r\n.inputBox:focus {\r\n  outline: none;\r\n  border: 3px rgba(25, 167, 255, 0.644) solid;\r\n  box-shadow: 0 0 6px rgba(25, 167, 255, 0.644);\r\n}\r\n.inputBox:not(:focus) {\r\n  outline: none;\r\n  border: 1px rgba(158, 158, 158, 0.943) solid;\r\n  box-shadow: 0 0 0px rgba(158, 158, 158, 0.943);\r\n}\r\n.inputBox:hover:not(:focus) {\r\n  outline: none;\r\n  border: 1px rgba(158, 158, 158, 0.943) solid;\r\n  box-shadow: 0 0 5px rgba(214, 214, 214, 0.943);\r\n}\r\n.button {\r\n  width: 70px;\r\n  height: 55px;\r\n  text-align: center;\r\n  margin-left: 12px;\r\n  border-radius: 16px;\r\n  font-size: 16px;\r\n  color: #ffffff;\r\n  background: #00aeff;\r\n}\r\n.imgCtrl {\r\n  width: 400px;\r\n  height: 160px;\r\n  position: absolute;\r\n}\r\n.graphContainer {\r\n  width: 100%;\r\n  /* 高度：填满剩余屏幕 */\r\n  height: calc(100% - 100px);\r\n  position: relative; /* 子元素相对于父元素绝对位置 */\r\n  top: 9px;\r\n  overflow: hidden;\r\n}\r\n\r\n.imgAnime-enter-active {\r\n  transition: opacity 0.5s ease, transform 0.5s ease, width 0.5s ease,\r\n    height 0.5s ease; /* 添加宽度和高度的过渡效果 */\r\n}\r\n.imgAnime-leave-active {\r\n  transition: opacity 0.5s ease, transform 0.5s ease, width 0.5s ease,\r\n    height 0.5s ease; /* 添加宽度和高度的过渡效果 */\r\n}\r\n.imgAnime-enter {\r\n  opacity: 0;\r\n  transform: translateY(100%) scale(0); /* 添加初始的缩放效果 */\r\n}\r\n.imgAnime-leave-to {\r\n  opacity: 0;\r\n  transform: translateY(100%) scale(0); /* 添加最终的缩放效果 */\r\n}\r\n\r\n/* animation for shaking */\r\n.errorAnime {\r\n  outline: none;\r\n  border: 3px rgba(255, 56, 56, 0.943) solid !important;\r\n  animation: shake 0.2s infinite;\r\n}\r\n@keyframes shake {\r\n  0% {\r\n    transform: translateX(0);\r\n  }\r\n  25% {\r\n    transform: translateX(-5px);\r\n  }\r\n  50% {\r\n    transform: translateX(0);\r\n  }\r\n  75% {\r\n    transform: translateX(5px);\r\n  }\r\n  100% {\r\n    transform: translateX(0);\r\n  }\r\n}\r\n\r\n/* animation for info show */\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: all 0.4s ease;\r\n}\r\n\r\n/* 2. 声明进入和离开的状态 */\r\n.fade-enter-from,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n  transform: scaleY(0.01) translate(30px, 0);\r\n}\r\n\r\n.slash {\r\n  width: 0;\r\n  height: 0;\r\n  border-top: 50px solid transparent;\r\n  border-bottom: 50px solid transparent;\r\n  border-left: 100px solid black;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}